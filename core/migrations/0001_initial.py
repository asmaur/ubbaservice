# Generated by Django 5.0.6 on 2024-06-22 10:15

import core.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_name', models.CharField(max_length=50, verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='Allotment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100000)], verbose_name='')),
                ('created_at', models.DateField(verbose_name='')),
                ('active', models.BooleanField(default=True, verbose_name='')),
                ('lot_number', models.CharField(max_length=50, verbose_name='Lot Num: A100001')),
                ('description', models.TextField(blank=True, null=True, verbose_name='')),
            ],
            options={
                'verbose_name': 'Allotment',
                'verbose_name_plural': 'Allotments',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('apelido', models.CharField(blank=True, max_length=50, null=True, verbose_name='apelido')),
                ('name', models.CharField(max_length=50)),
                ('race', models.CharField(max_length=50)),
                ('birth_date', models.DateField()),
                ('castration', models.BooleanField(default=False, verbose_name='Castraded')),
                ('registered', models.BooleanField(default=True, verbose_name='Registered')),
                ('alive', models.BooleanField(default=True, verbose_name='Alive')),
                ('lost', models.BooleanField(default=False, verbose_name='Lost pet')),
                ('genre', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='male', max_length=20)),
                ('observation', models.TextField(blank=True, null=True, verbose_name='')),
                ('medical_condition', models.TextField(blank=True, null=True, verbose_name='')),
                ('image', models.ImageField(blank=True, null=True, upload_to='storage', verbose_name='')),
                ('joined_date', models.DateTimeField(auto_now_add=True, verbose_name='')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='')),
            ],
            options={
                'verbose_name': 'Pet',
                'verbose_name_plural': 'Pets',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Petname',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('petname', models.CharField(db_index=True, max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'PetName',
                'verbose_name_plural': 'PetNames',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serie', models.CharField(max_length=50, verbose_name='Serie: KMSX0001')),
                ('active', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateField(verbose_name='Created at ')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='PetDeath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='')),
                ('death_reason', models.CharField(blank=True, max_length=255, null=True, verbose_name='')),
                ('pet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.pet', verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='PetLost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lost_date', models.DateField(blank=True, null=True, verbose_name='')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pet', verbose_name='')),
            ],
        ),
        migrations.AddField(
            model_name='pet',
            name='petname',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.petname'),
        ),
        migrations.CreateModel(
            name='PetUUID',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=core.models.generateUUID, max_length=50, unique=True, verbose_name='uuid')),
                ('registered', models.BooleanField(default=False, verbose_name='Scanned')),
                ('created_at', models.DateField(verbose_name='Created at')),
                ('allotment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.allotment', verbose_name='')),
            ],
            options={
                'verbose_name': 'PetUUID',
                'verbose_name_plural': 'PetUUIDs',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='pet',
            name='pet_uuid',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.petuuid', verbose_name='UUID'),
        ),
        migrations.AddField(
            model_name='allotment',
            name='serie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series', to='core.serie'),
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Complete Name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='tutor_storage', verbose_name='')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.address', verbose_name='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='')),
            ],
            options={
                'verbose_name': 'Tutor',
                'verbose_name_plural': 'Tutors',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='pet',
            name='tutor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.tutor'),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('phone', models.CharField(max_length=50, verbose_name='')),
                ('social', models.BooleanField(default=True, verbose_name='')),
                ('emergency', models.BooleanField(default=False, verbose_name='')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='')),
                ('tiktok', models.URLField(blank=True, null=True, verbose_name='')),
                ('mine', models.BooleanField(default=True, verbose_name='')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='core.address', verbose_name='')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='core.tutor')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'db_table': '',
                'ordering': ('name',),
                'managed': True,
            },
        ),
    ]
