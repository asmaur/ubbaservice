# Generated by Django 5.0.6 on 2024-07-25 20:02

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='')),
                ('description', models.CharField(max_length=255, verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='Behavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('color', models.CharField(blank=True, max_length=10, null=True)),
                ('icon', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('phone', models.CharField(max_length=50, verbose_name='Phone')),
                ('social', models.BooleanField(default=True, verbose_name='Social')),
                ('mine', models.BooleanField(default=True, verbose_name='Is mine?')),
                ('emergency', models.BooleanField(default=True, verbose_name='Emergency')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('tiktok', models.URLField(blank=True, null=True, verbose_name='Tiktok')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'db_table': '',
                'ordering': ('name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Health',
                'verbose_name_plural': 'Healths',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Medecine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('unit', models.CharField(max_length=15)),
                ('instruction', models.TextField()),
                ('caution', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Mood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Record',
                'verbose_name_plural': 'Records',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('icon', models.CharField(blank=True, max_length=10, null=True)),
                ('color', models.CharField(blank=True, max_length=10, null=True)),
                ('is_default', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_visit', models.TextField(verbose_name='Reason for visit/ Diagnosis')),
                ('diagnosis', models.TextField(verbose_name='Assesment/ Diagnosis')),
                ('treatment', models.TextField(verbose_name='Treatment/ Recommendation')),
                ('initial_date', models.DateField(verbose_name='')),
                ('final_date', models.DateField(verbose_name='')),
            ],
            options={
                'verbose_name': 'Treatment',
                'verbose_name_plural': 'Treatments',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vaccine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='')),
                ('lot', models.CharField(max_length=50, verbose_name='')),
                ('injection_date', models.DateField(verbose_name='')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='')),
            ],
            options={
                'verbose_name': 'Vaccine',
                'verbose_name_plural': 'Vaccines',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Veterinarian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_name', models.CharField(max_length=50, verbose_name='Dr. Name')),
                ('hospital_name', models.CharField(max_length=50, verbose_name='Clinic name')),
                ('doctor_crm', models.CharField(max_length=15, verbose_name='Dr. CRM')),
            ],
        ),
        migrations.CreateModel(
            name='Weigh',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='')),
                ('unit', models.CharField(max_length=5, verbose_name='')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='')),
            ],
        ),
    ]
